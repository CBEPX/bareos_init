# ---> (ДЛЯ УДОБСТВА) ВСЕ ЧТО НИЖЕ ВЫНОШУ В ОТДЕЛЬНЫЕ ФАЙЛЫ, 1 ФАЙЛ = 1 ЗАДАНИЕ
# ---> В ФАЙЛ ЗАДАНИЯ ВХОДЯТ РЕСУРСЫ: Client, FileSet, Job, Pool (обычно несколько), Schedule, Storage
# ---> РЕСУРСЫ Messages ТАК ЖЕ ВЫНОШУ В ОТДЕЛЬНЫЙ ФАЙЛ
# ---> ПОДКЛЮЧАЮ ЗАДАНИЯ ТАК:
# ---> @/etc/bareos/bareos-dir.conf.d/name1.conf
# ---> @/etc/bareos/bareos-dir.conf.d/name2.conf
# ---> В /etc/bareos/bareos-dir.conf

Client {
  Enabled           = yes
	Name					    = XXX_CLIENT_NAME_XXX
  Description       = "Описание // просто комментарий"
	Address					  = XXX_CLIENT_IP_XXX		      # ip или hostname компа, где стоит file daemon
	Port					    = 9102			                # 9102; порт, на котором слушает клиент
	Catalog					  = catalog_mysql	        	  # имя ресурса Catalog, используемого для хранения в СУБД информации, связанной с данным клиентом
  Auth Type         = None                      # какой тип авторизации использовать для взаимодействия между службами (None|Clear|MD5)
	Password				  = XXX_CLIENT_PASS_XXX       # должен соответствовать паролю в ресурсе Director в конфиге file daemon'a
  Heartbeat Interval = 30                       # раз в заданное время передавать пакеты на сервер, чтобы умные роутеры на рвали коннекты
	Maximum Concurrent Jobs	= 1
  #Passive          = no                        # Ревес порядка подключения. Если yes, то подключение инициирует storage daemon, иначе file daemon.
                                                # если yes, то в bareos-fd.conf надо выставить Compatible = no
  #Allow Client Connect  = no                    # ??? (нет описания)
	#File Retention		= 60 days		                # период хранения информации о файлах данного клиента в каталоге 
														                    # более короткий период хранения задания или тома может повлечь досрочное 
														                    # удаление информации о файлах; данные на диске не удаляются
	#Job Retention		= 180 days  	              # период хранения информации о заданиях данного клиента в каталоге; 
														                    # данные на диске не удаляются; более короткий период хранения тома (ресурс Pool)
														                    # может повлечь досрочное удаление информации о заданиях; ассоциированные с удаляемым 
														                    # заданием записи о файлах и носителях также удаляются
	#AutoPrune				 = yes				              # удалять в конце задания из каталога записи о файлах и заданиях, срок хранения которых истёк
  #Hard Quota        = 0                        # при превышении передачи этого кол-ва байт, задание будет прервано
  #Quota Include Failed Jobs = yes              # квота учитывается и для заданий, завершившихся не удачно
  #Soft Quota       = 0                         # мягкая квота, выдаст предупреждение
  #Soft Quota Grace Period  = <time>            # как долго клиент может превышать софт квоту, прежде чем ограничения вступят в силу 
  #Strict Quotas    = no                        # если no - применить мгновенные ограничения, когда истекает Soft Quota Grace Period, а если yes - мягкие
                                    # (что-то тут не то... не надо юзать эти квоты) 
                                    # http://doc.bareos.org/master/html/bareos-manual-main-reference.html#directiveDirClientQuota Include Failed Jobs
  #Maximum Bandwidth Per Job = 0                # ограничение скорости (k/s, kb/s, m/s, mb/s)
}

Schedule {
  Enabled           = yes
	Name					    = XXX_SCHEDULE_NAME_XXX		 # название расписания
  Description       = "Описание расписания // просто комментарий"
	Run						    = job-overrides date-time-specification     # см. ниже
                    # job-overrides может принимать слудющие значения:
                        # Level               = Full|Differential|Incremental
                        # Storage             = storage-resource-name
                        # Messages            = messages-resource-name
                        # Pool                = pool-resource-name
                        # FullPool            = pool-resource-name
                        # DifferentialPool    = pool-resource-name
                        # IncrementalPool     = pool-resource-name
                        # Accurate            = yes|no 

	# Examples:
  # Run = Level=Full sun at 2:05                          # полный, по вс., в 2:05
  # Run = Level=Incremental mon-sat at 2:05               # инкрем., с пн. по сб., в 2:05
  # Run = Level=Full Pool=Monthly 1st sun at 2:05         # полный, в пул Monthly, первое вс. месяца, в 2:05
  # Run = Level=Differential 2nd-5th sun at 2:05          # диффер., в пул из Job {}, со 2 по 5 вс. месяца, в 2:05
  # Run = Level=Incremental Pool=Daily mon-sat at 2:05    # инкрем., в пул Daily, с пн. по сб., в 2:05
  # Run = Level=Full on 1 at 2:05                         # полный, первого числа месяца, в 2:05
  # Run = Level=Incremental on 2-31 at 2:05               # инкрем., со 2 по 31 числа месяца, в 2:05
  # Run = Level=Full hourly at 0:05                       # полный, каждый час в 5 минут
}


FileSet {
	Name					    = XXX_FILESET_NAME_XXX
  Description       = "Описание // просто комментарий"
	Enable VSS				= no						        # Использовать Volume Shadow Copy Service для Windows клиентов, по умолчанию = yes
  Ignore File Set Changes = no              # если no, то при изменении include или exclude списков, будет сделана полная копия, вне очереди
	Include {											            # какие файлы бэкапить
		Exclude Dir Containing	= zzzBareosExcludezzz		# если в каталоге есть файл с именем zzzBareosExcludezzz, то этот каталог бэкапиться не будет
		Options {
      AutoExclude   = yes                   # только windows, автоматически исключать файлы, которые не предназначены для бэкапа
      ignore case		= no						        # для форточек лучше yes, для никсов - no
			signature		  = MD5					          # MD5 or SHA1
			compression		= GZIP			            # сжимаеть файлы file daemon'ом, хранит на storage в сжатом виде (GZIP|LZO|LZFAST|LZ4|LZ4HC)
                                            # может быть переопределеная опцией AllowCompression в Storage {}
			Accurate		  = pugms5			          # что сравнивать для определения изменился файл или нет (Backup Level=Incremental/Differential)
														                    # i - номер inode
														                    # p - права доступа
														                    # n - число жёстких ссылок
														                    # u - uid
														                    # g - gid
														                    # s - размер
														                    # a - время последнего доступа
														                    # m - время последнего изменения
														                    # c - время последнего изменения inode (некоторые программы восстанавливают atime после чтения,
														                    #     при этом ctime устанавливается на текущее время)
                                                # d - размер файла отчета уменьшился (report file size decreases)
														                    # 5 - MD5
														                    # 1 - SHA1
                                                # A - всегда бэкапировать файл (только для опции Accurate) (it allows to always backup the file)
			verify			  = ps5				            # что проверять в задании Verify при Level=DiskToCatalog или Level=Catalog
			onefs			    = yes					          # не выходить за пределеы файловой системы
			portable	  	= no					          # переносимый формат, сохраняет не все атрибуты NTFS,
			recurse			  = yes					          # сохранять так же подкаталоги и их содержимое
			sparse			  = no					          # специальным образом обрабатывать файлы с дырками 
														                # (представляются как куски файла, большой длины, заполненные нулями)
			noatime			  = yes                   # не изменять атрибут файлов atime
			keepatime		  = no
			mtimeonly		  = no
			checkfilechanges	= yes					      # выдает предупреждение, если файл изменился в процессе бэкапа
			hardlinks		  = yes						        # учитывать жесткие ссылки с при бэкапе и ресторе
			exclude			  = no					          # если yes, то этот Include{} будет работать как список исключения
      aclsupport    = yes                   # поддежка unix acl (не совместима между разными системами)
      xattrsupport  = yes                   # поддежка unix xattr (не совместима между разными системами)
			hfsplussupport= no					          # support for Mac OSX HFS plus finder
			# fstype		  = filesystem-type       # бэкапить файлы только с указанной ФС, можно указать несколько дирректив fstype,
														                # не поддерживается в Windows, 
														                # допустимо -> ext2, jfs, ntfs, proc, reiserfs, xfs, usbdevfs, sysfs, smbfs, iso9660
			# DriveType		= Windows-drive-type    # только для windows-клиентов (removable, fixed, remote, cdrom, ramdisk)
			# wild			  = шаблон					      # полное имя файла или каталога сопоставляется с шаблоном в стиле shell
														                # при использовании нескольких шаблонов выполняется ИЛИ
														                # для каталога необходимо указывать завершающий '/'
			# wildfile		= шаблон					      # только обычные файлы
			# wilddir		  = шаблон					      # только каталоги
			# regex			  = регулярное-выражение	# то же, что wild, но регулярные выражения (POSIX)
			# regexfile		= регулярное-выражение	# только обычные файлы
			# regexdir		= регулярное-выражение	#только каталоги
      # size        = sizeoption            # ограничить выбор файлов по их размеру
                                            # <size>-<size> - диапозон
                                            # <size - меньше чем
                                            # >size - больше чем
                                            # size - выбрать файлы, которые в пределах 1% от size
		}												 
		File = "/path/to/file.ext"	            # файл или каталог, который нужно забэкапить
		File = "|sh -c 'ls -1 /home/example | grep -vi .tmp'"	  # имена файлов, начинающиеся с '|', вызывают выполнение указанной программы 
																                            # на компьютере директора (с его правами) в момент выполнения задания; 
																                            # результат работы программы интерпретируется как список имён файлов по одному на строку
		File = "\\|/path/to/script.sh"			    # имена файлов, начинающиеся с '\|', вызывают выполнение указанной программы 
														                # на компьютере клиента в момент выполнения задания; результат работы программы интерпретируется
														                # как список имён файлов по одному на каждой строке; если строка заключена в кавычки, 
														                # то необходимо начинать с "\\|"
		File = "</path/to/files.list"				    # если имя файла начинается с '<', то указанный файл должен содержать список файлов 
														                # по одному на строке (без кавычек); 
														                # файл читается на компьютере директора в момент выполнения задания
		File = "\\</path/to/files.list"	        # если имя файла начинается с '\<', то указанный файл должен содержать список файлов 
														                # по одному на строке (без кавычек); файл читается на компьютере клиента в момент 
														                # выполнения задания; если строка заключена в кавычки, то необходимо начинать с "\\<"
		File = "c:/windows/notepad.exe"			    # для windows надо указывать прямые слеши ('/'), а не обратные ('\')
		@/path/to/file-list			                # файл, содержащий список файлов/папок для бэкапа в виде как пред. дирректива
														                # реально это просто инклюд-файл, типа тех что в конфигах, например, apache
														                # фактически содержит часть конфига и может находиться в любом месте конфига,
														                # но диррективы должны относить к тому месту, в котором находится этот файл-инклюд
    #Plugin                  = <plugin-name:plugin-parameter1:plugin-parameter2:…>      # какие плагины использовать (можно несколько)
                                                                                        # bpluginfo - поможет узнать специфику плагина
	}
	Exclude {         # список исключений
		File				    = /proc
		File				    = .autofsck
	}
}

Job {               # Настройки для конкретного задания, они также могут быть использованы в JobDef {}
	Enabled					  = yes
	Name					    = XXX_JOB_NAME_XXX
	JobDefs				    = job_default   		# шаблон задания (ресурс JobDefs), используется в качестве умолчания
  Description       = "Описание задания // просто комментарий"
	Type					    = Backup            # Backup | Restore | Verify 
	Level					    = Full	            # Full | Incremental | Differential | VirtualFull (какой уровень использовать по умолчанию)
                                        # VirtualFull - собирает полную копию из текущих полной, дифференциальных и инкрементальных
  # Level           = <verify>          # проверка копий, может быть:
                                        # InitCatalog       - инициирует список файлов с их аттрибутами и сохраняет в БД (аля tripwire)
                                        # Catalog           - сравнивает текущее состояние файлов с ранее сохранненной информацией, 
                                                            # полученной при выполнении InitCatalog
                                        # VolumeToCatalog   - читает атрибуты файлов из тома и сравнивает с последней резервной копией 
                                                            # (файлы будут распакованы на диск, после чего проверяться, 
                                                            # поэтому обязательно нужен рабочий клиент)
                                        # DiskToCatalog     - читает файлы и их атрибуты с диска клиента и сравнивает 
                                                            # с последней резервной копией
	# Accurate			  = yes	              # чтобы файловый демон знал, какие файлы были перемещены/удалены. 
                                        # На 500К файлов требуется ~64 Mb RAM.
  # Job To Verify   = job-resouce-name  # ???
  # Verify Job      = job-resource-name # имя ресурса job {}, который использовать для проверки данного задания
                                        # позволяет, например, проверять бэкап после выполнения (обычно level = VolumeToCatalog)
  #Catalog           = catalog_mysql	          # имя ресурса Catalog {} (оптимально указать в JobDefs)
	client					  = XXX_CLIENT_NAME_XXX	      # имя ресурса Client {}
	FileSet					  = XXX_FILESET_NAME_XXX	    # имя ресурса FileSet {}
	#Messages				  = XXX_MESSAGES_NAME_XXX     # имя ресурса Messages {} (оптимально указать в JobDefs)
	Schedule				  = XXX_SCHEDULE_NAME_XXX			# расписание (если не указать, то запуск возможен только вручную)
	Storage					  = XXX_STORAGE_NAME_XXX		  # имя ресурса Storage {}
	Pool						  = XXX_POOL_NAME_XXX	        # имя ресурса Pool {}
  Full Backup Pool  = XXX_POOL_NAME_XXX         # Pool для полных заданий (имеет приоритет над Pool)
  Virtual Full Backup Pool = XXX_POOL_NAME_XXX  # Pool для virtual full заданий (имеет приоритет над Pool)
  Differential Backup Pool = XXX_POOL_NAME_XXX  # Pool для дифференциальных заданий (имеет приоритет над Pool)
  Incremental Backup Pool = XXX_POOL_NAME_XXX   # Pool для инкрементальных заданий (имеет приоритет над Pool)
	#Max Full Interval = 7 days					          # с какой частотой делать обязательную полную копию (если 0 - никогда)
  #Max Virtual Full Interval = 7 days           # с какой частотой делать обязательную virtual full копию (если 0 - никогда)
	#Max Diff Interval = 7 days					          # с какой частотой делать обязательную дифференциальную копию (если 0 - никогда)
  # Next Pool       = <pool-resource-name>      # A Next Pool override used for Migration/Copy and Virtual Backup Jobs.  
  # Max Concurrent Copies = 100                 # ??? (default 100)
  #Maximum Bandwidth = 10 mb/s                  # ограничение скорости сети (k/s, kb/s, m/s, mb/s)
  # Write Bootstrap = /path/to/bootstrap_file.bsr   # где хранить bootstrap файл для этого задания 
                                                    # (можно указать в JobDefs "/path/to/\%c_\%n.bsr")
  # Write Verify List = <directory>             # ??? (нет описания)

  # run = "Nightly-backup level=%l since=\"%s\" storage=DDS-4"     # Толком не понял -> 
                                        # http://doc.bareos.org/master/html/bareos-manual-main-reference.html#directiveDirJobRun

	#RunScript {										                          # запуск скрипт до\после выполнения задания
		#Runs When			    = Never 					      # When run commands (may be one of -> Before|After|Always|AfterVSS)
		#Runs On Success	  = Yes						        # Run command if JobStatus is successful
		#Runs On Failure 	  = No  						      # Run command if JobStatus isn't successful
		#Runs On Client 	  = Yes 						      # Run command on client
		#Fail Job On Error 	= Yes   				        # Fail job if script returns something different from 0
		#Console 	  	  	  = ""						        # Console command
		#Command 	  	  	  = ""					          # Path to your script 
														                    # В windows пути надо указывать прямым слешем (/), а не обратным (\)
														                    # example: "\"C:/Program Files/Bareos/systemstate.bat\""
														                    # В batch-скриптах надо в конце явно указывать 'exit 0', иначе считается, 
														                    # что скрипт отработал НЕ успешно

                        # Можно испольщзовать следующие подстановочные знаки (переменные):
                        # Variable    Description
                        # -----------------------
                        # \%c         Client’s Name
                        # \%d         Director’s Name
                        # \%e         Job Exit Code
                            # * OK
                            # * Error
                            # * Fatal Error
                         		# * Canceled
                         		# * Differences
                        		# * Unknown term code
                        # \%i         JobId
                        # \%j         Unique JobId
                        # \%l         Job Level
                        # \%n         Unadorned Job Name
                        # \%r         Recipients
                        # \%s         Since Time
                        # \%b         Job Bytes
                        # \%f         Job Files
                        # \%t         Job Type (Backup, ...)
                        # \%v         Read Volume Name (only on Director)
                        # \%V         Write Volume Name (only on Director) 
	#}

# Можно использовать следующие сокращения (для RunScript):
#	------------------------------------------------------------------------------------------------------ #
#	Keyword 								|RunsOnSuccess 	|RunsOnFailure 	|FailJobOnError 	|Runs On Client 	|RunsWhen  #
#	------------------------------------------------------------------------------------------------------ #
#	Run Before Job 	  	  	|-							|-							|Yes 							|No 							|Before		 #
#	Run After Job 					|Yes 						|No 	  				|-								|No 							|After		 #
#	Run After Failed Job 		|No 						|Yes 	  				|-								|No 							|After		 #
#	Client Run Before Job 	|-							|-							|Yes 							|Yes 							|Before		 #
#	Client Run After Job 		|Yes 						|No 	  				|-								|Yes 							|After		 #
#	------------------------------------------------------------------------------------------------------ #
# Пример:
# Client Run Before Job = "/usr/scripts/mysql_dump.sh"
}


Pool {									# отдельное описание для каждого набора томов; используется при описании задания для указания
												# пула из которого должен быть взят том; после внесения изменений необходимо выполнить команду
												# "update pool" или перезапустить директора; для изменения параметров уже существующего тома
												# необходимо выполнить команду "update volume"
	Name                  = XXX_POOL_NAME_XXX	# имя Scratch зарезервировано для пула запасных том - при необходимости система 
														                # самостоятельно переводит том из него в требуемый пул
  Description           = "Описание // просто комментарий"
  Catalog               = catalog_mysql
	Storage					      = XXX_STORAGE_NAME_XXX      # имя ресурса, описывающего сервер хранения; перекрывает значение, заданное в Job и Schedule;
												  		                      # необходимо для работы задания миграции
	Maximum Volumes			  = 0							    # 0 - бесконечность, сколько может быть томов
														                # если бэкап делается с пн. по пт. один раз в день и зачение этого параметра равно 5, 
                                            # то в одном томе будут храниться все бэкапы за эти 5 дней)
	Volume Retention		  = 61 days	          # время хранения информации о заданиях и файлах на данном томе в каталоге; отсчёт начинается 
														                # с момента перехода из состояния Appendable в Full или Used; не рекомендуется устанавливать
														                # меньше 2 интервалов между полным сохранением; принимается во внимание кратчайший из Job
														                # Retention, File Retention и Volume Retention; сами данные не стираются; вместо указанных в
														                # bareos-dir.conf 40 дней в реальности устанавливается 50 дней, вместо 16 - 20
	JobRetention			    = 61 days					  # интервал хранения информации о заданиях, приоритет над описанием клиента
	FileRetention			    = 61 days					  # интервал хранения информации о файлах, приоритет над описанием клиента
	Label Format			    = "###name###_full_" # шаблон для создания имени тома при автоматическом создании метки тома; можно использовать
														                # символы '-_:.' и переменные: ${Year}, ${Month}, ${Day}, ${Hour}, ${Minute}, ${Second},
														                # ${WeekDay}, ${Level}, ${Type}, ${JobName}, ${Storage}, ${Client}, ${Catalog}, ${MediaType}
	Pool Type				      = Backup					  # другие не реализованы
  Label Type            = Bareos
  Purge Oldest Volume   = yes               # очистить самый старый том, когда уже нет свободных для записи
	ActionOnPurge			    = Truncate	        # обрезка тома (когда том по факту меньше, чем его размер на диске, 
                                            # это уменьшит размер тома на диске)
  Recycle               = yes               # очищать тома, для повторного использования
  Recycle Oldest Volume = yes               # очищать самый старый том
	Catalog Files			    = yes						    # заносить информацию о сохранённых файлах в каталог
	AutoPrune				      = yes               # удалять из каталога записи о файлах и заданиях, срок хранения которых истёк в соответствии 
														                # с Volume Retention, при поиске доступного на запись тома
	Maximum Volume Jobs 	= 1							    # сколько заданий может быть сохранено в одном томе (например, если бэкапы делаются 
  #Recycle Current Volume = no              # очищать текущий том (не очень понятно что к чему, лучше не юзать)
	#Maximum Volume Files	= 0							    # сколько файлов может быть записано (храниться) в один том
	#Maximum Volume Bytes = 0							    # сколько байт может храниться в одном томе
	#Volume Use Duration	= 0                 # продолжительность использования этого тома
}

Storage {								# отдельное описание для каждого устройства на сервере хранения; используется 
												# при описании задания для указания устройства, на котором будут монтироваться тома
  Enabled               = yes
	Name					        = XXX_STORAGE_NAME_XXX
  Description           = "Описание // просто комментарий"
	Device					      = XXX_DEVICE_NAME_XXX # должно соответствовать директиве Name ресурса Device или Autochanger настройки 
														                # сервера хранения; нельзя делать 2 ресурса Storage с одинаковыми директивами Address и Device
	Media Type			      = XXX_MEDIATYPE_NAME_XXX # должно соответствовать директиве Media Type ресурса Device настройки сервера хранения;
														                # рекомендуется давать уникальные имена всем типам носителей и дисковым "устройствам"
	Address					      = 10.1.1.161        # адрес сервера, где стоит Storage daemon
	Port					        = 9103
  Auth Type             = None              # какой тип авторизации использовать для взаимодействия между службами (None|Clear|MD5)
	Password				      = XXX_STORAGE_PASS_XXX # должен соответствовать паролю в ресурсе Director в конфиге storage daemon'a
	Autochanger				    = no						    # так будет лучше ;)
	Maximum Concurrent Jobs = 1	              # аналогично ;)
  Maximum Concurrent Read Jobs = 10         # сколько заданий максимум могут читать с этого хранилища одновременно
	AllowCompression	    = yes		    		    # если no, то не будет сжимать файлы на клиенте; переопределяет аналогичную опцию из FileSet {}
  Heartbeat Interval    = 30                # раз в заданное время передавать пакеты на сервер, чтобы умные роутеры на рвали коннекты
  Collect Statistics    = no                # собирать статистику ???
  #Maximum Bandwidth Per Job = 0            # ограничение скорости (k/s, kb/s, m/s, mb/s)
}

# vim:syntax=bacula:ts=2
